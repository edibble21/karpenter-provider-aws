apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: nodeclaim-validation
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups: ["karpenter.sh"]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["nodeclaims"]
  validations:
    # From spec.nodeClassRef.group
    - expression: |
        has(object.spec.nodeClassRef.group) && 
        object.spec.nodeClassRef.group != ''
      message: "group may not be empty"

    # From spec.nodeClassRef.kind
    - expression: |
        has(object.spec.nodeClassRef.kind) && 
        object.spec.nodeClassRef.kind != ''
      message: "kind may not be empty"

    # From spec.nodeClassRef.name
    - expression: |
        has(object.spec.nodeClassRef.name) && 
        object.spec.nodeClassRef.name != ''
      message: "name may not be empty"

    # From spec.requirements.items.properties.key validations
    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.items.properties.key in [
          "beta.kubernetes.io/instance-type",
          "failure-domain.beta.kubernetes.io/region",
          "beta.kubernetes.io/os",
          "beta.kubernetes.io/arch",
          "failure-domain.beta.kubernetes.io/zone",
          "topology.kubernetes.io/zone",
          "topology.kubernetes.io/region",
          "node.kubernetes.io/instance-type",
          "kubernetes.io/arch",
          "kubernetes.io/os",
          "node.kubernetes.io/windows-build"
        ] ||
        object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("node.kubernetes.io") ||
        object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("node-restriction.kubernetes.io") ||
        !object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("kubernetes.io")
      message: "label domain kubernetes.io is restricted"

    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("kops.k8s.io") ||
        !object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("k8s.io")
      message: "label domain k8s.io is restricted"

    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.items.properties.key in ["karpenter.sh/capacity-type", "karpenter.sh/nodepool"] ||
        !object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("karpenter.sh")
      message: "label domain karpenter.sh is restricted"

    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.items.properties.key != "kubernetes.io/hostname"
      message: "label kubernetes.io/hostname is restricted"

    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.items.properties.key in [
          "karpenter.k8s.aws/capacity-reservation-id",
          "karpenter.k8s.aws/ec2nodeclass",
          "karpenter.k8s.aws/instance-encryption-in-transit-supported",
          "karpenter.k8s.aws/instance-category",
          "karpenter.k8s.aws/instance-hypervisor",
          "karpenter.k8s.aws/instance-family",
          "karpenter.k8s.aws/instance-generation",
          "karpenter.k8s.aws/instance-local-nvme",
          "karpenter.k8s.aws/instance-size",
          "karpenter.k8s.aws/instance-cpu",
          "karpenter.k8s.aws/instance-cpu-manufacturer",
          "karpenter.k8s.aws/instance-cpu-sustained-clock-speed-mhz",
          "karpenter.k8s.aws/instance-memory",
          "karpenter.k8s.aws/instance-ebs-bandwidth",
          "karpenter.k8s.aws/instance-network-bandwidth",
          "karpenter.k8s.aws/instance-gpu-name",
          "karpenter.k8s.aws/instance-gpu-manufacturer",
          "karpenter.k8s.aws/instance-gpu-count",
          "karpenter.k8s.aws/instance-gpu-memory",
          "karpenter.k8s.aws/instance-accelerator-name",
          "karpenter.k8s.aws/instance-accelerator-manufacturer",
          "karpenter.k8s.aws/instance-accelerator-count"
        ] ||
        !object.spec.requirements.items.properties.key.find("^([^/]+)").endsWith("karpenter.k8s.aws")
      message: "label domain karpenter.k8s.aws is restricted"

    # From spec.requirements validations
    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.all(x,
          x.operator == 'In' ? x.values.size() != 0 : true
        )
      message: "requirements with operator 'In' must have a value defined"

    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.all(x,
          (x.operator == 'Gt' || x.operator == 'Lt') ?
          (x.values.size() == 1 && int(x.values[0]) >= 0) : true
        )
      message: "requirements operator 'Gt' or 'Lt' must have a single positive integer value"

    - expression: |
        !has(object.spec.requirements) ||
        object.spec.requirements.all(x,
          (x.operator == 'In' && has(x.minValues)) ?
          x.values.size() >= x.minValues : true
        )
      message: "requirements with 'minValues' must have at least that many values specified in the 'values' field"

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: nodeclaim-update-validation
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups: ["karpenter.sh"]
      apiVersions: ["v1"]
      operations: ["UPDATE"]
      resources: ["nodeclaims"]
  validations:
    # Spec immutability validation
    - expression: "object.spec == oldObject.spec"
      message: "spec is immutable"